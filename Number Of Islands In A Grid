#include <iostream>
#include <bits/stdc++.h>
#define lld long long int 
using namespace std;
int dfs(vector <int> adj[],vector <int> vis[],int i,int j,int n,int m)
{
    if(i < 0 || j < 0 ||i >= n || j >= m || adj[i][j] == 0 || vis[i][j] == 1)
    {
        return 0;
    }
    vis[i][j]=1;
    dfs(A,vis,i+1,j,N,M);
    dfs(A,vis,i+1,j+1,N,M);
    dfs(A,vis,i+1,j-1,N,M);
    dfs(A,vis,i-1,j+1,N,M);
    dfs(A,vis,i-1,j-1,N,M);
    dfs(A,vis,i-1,j,N,M);
    dfs(A,vis,i,j+1,N,M);
    dfs(A,vis,i,j-1,N,M);
    return 1;
}
int main() 
{
    int n,m;
    cin >> n >> m;
    int a[n][m];
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            cin >> a[i][j];
        }
    }
    vector <int> adj[n];
    vector <int> vis[n];
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            adj[i].push_back(0);
            vis[i].push_back(0);
        }
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            adj[i][j] = a[i][j];
        }
    }
    int numI=0;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            //cout<<adj[i][j]<<endl;
            if(adj[i][j] == 1)
            {
                numI+=dfs(adj,vis,i,j,n,m);
            }
        }
    }
    cout<<numI<<endl;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            cout<<vis[i][j]<<" ";
        }cout<<endl;
    }
	return 0;
}
